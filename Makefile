### Generated by Winemaker 0.8.4
###
### Invocation command line was
### /usr/bin/winemaker --lower-uppercase --console --single-target wine-symlink-helper .


SRCDIR                = .
SUBDIRS               =
DLLS                  =
LIBS                  =
EXES                  = wine-symlink-helper



### Common settings

CEXTRA                =
CXXEXTRA              =
RCEXTRA               =
DEFINES               =
INCLUDE_PATH          = 
DLL_PATH              =
DLL_IMPORTS           =
LIBRARY_PATH          =
LIBRARIES             =


### wine-symlink-helper sources and settings

wine_symlink_helper_MODULE= wine-symlink-helper
wine_symlink_helper_C_SRCS=
wine_symlink_helper_CXX_SRCS= main.cpp
wine_symlink_helper_RC_SRCS=
wine_symlink_helper_LDFLAGS=
wine_symlink_helper_ARFLAGS=
wine_symlink_helper_DLL_PATH=
wine_symlink_helper_DLLS=
wine_symlink_helper_LIBRARY_PATH=
wine_symlink_helper_LIBRARIES=

wine_symlink_helper_OBJS= $(wine_symlink_helper_C_SRCS:.c=.o) \
			$(wine_symlink_helper_CXX_SRCS:.cpp=.o) \
			$(wine_symlink_helper_RC_SRCS:.rc=.res)



### Global source lists

C_SRCS                = $(wine_symlink_helper_C_SRCS)
CXX_SRCS              = $(wine_symlink_helper_CXX_SRCS)
RC_SRCS               = $(wine_symlink_helper_RC_SRCS)


### Tools

CC = winegcc
CXX = wineg++
RC = wrc
AR = ar

### Flags

CXXFLAGS=-std=c++17 -m64

### Generic targets

all: $(SUBDIRS) $(DLLS:%=%.so) $(LIBS) $(EXES)

### Build rules

.PHONY: all clean dummy

$(SUBDIRS): dummy
	@cd $@ && $(MAKE)

# Implicit rules

.SUFFIXES: .cpp .cxx .rc .res
DEFINCL = $(INCLUDE_PATH) $(DEFINES) $(OPTIONS)

.c.o:
	$(CC) -c $(CFLAGS) $(CEXTRA) $(DEFINCL) -o $@ $<

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.rc.res:
	$(RC) $(RCFLAGS) $(RCEXTRA) $(DEFINCL) -fo$@ $<

# Rules for cleaning

CLEAN_FILES     = y.tab.c y.tab.h lex.yy.c core *.orig *.rej \
                  \\\#*\\\# *~ *% .\\\#*

clean:: $(SUBDIRS:%=%/__clean__) $(EXTRASUBDIRS:%=%/__clean__)
	$(RM) $(CLEAN_FILES) $(RC_SRCS:.rc=.res) $(C_SRCS:.c=.o) $(CXX_SRCS:.cpp=.o)
	$(RM) $(DLLS:%=%.so) $(LIBS) $(EXES) $(EXES:%=%.so)

$(SUBDIRS:%=%/__clean__): dummy
	cd `dirname $@` && $(MAKE) clean

$(EXTRASUBDIRS:%=%/__clean__): dummy
	-cd `dirname $@` && $(RM) $(CLEAN_FILES)

### Target specific build rules
DEFLIB = $(LIBRARY_PATH) $(LIBRARIES) $(DLL_PATH) $(DLL_IMPORTS:%=-l%)

$(wine_symlink_helper_MODULE): $(wine_symlink_helper_OBJS)
	$(CXX) $(wine_symlink_helper_LDFLAGS) -o $@ $(wine_symlink_helper_OBJS) $(wine_symlink_helper_LIBRARY_PATH) $(wine_symlink_helper_DLL_PATH) $(DEFLIB) $(wine_symlink_helper_DLLS:%=-l%) $(wine_symlink_helper_LIBRARIES:%=-l%)


